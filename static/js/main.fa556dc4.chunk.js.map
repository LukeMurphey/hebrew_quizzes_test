{"version":3,"sources":["components/About/index.js","components/URLs/index.js","files/bookCover.jpg","components/Home/index.js","components/QuizQuestion/constants.js","components/QuizQuestion/index.js","components/QuizContainer/index.js","components/Hebrew/index.js","components/Verb/ParsingAnswer.js","components/Verb/VerbParsingQuestion.js","components/Utils/index.js","components/QuizCompleteDialog/index.js","quizzes/QalPerfectQatal/index.js","components/MatchingQuestion/index.js","quizzes/MatchingQuiz/index.js","components/QuizRegistry/index.js","components/QuizList/index.js","components/NavContainer/index.js","history.js","App.js","reportWebVitals.js","components/ErrorBoundary/index.js","index.js"],"names":["About","inverted","Container","text","style","marginTop","Header","as","href","defaultProps","URL_QUIZZES","Home","history","src","bookCover","width","marginRight","marginBottom","float","alt","Button","primary","onClick","push","withRouter","UNANSWERED","CORRECT","INCORRECT","QuizQuestion","title","children","onSubmit","answerStatus","correctAnswer","Segment","Message","positive","negative","color","QuizContainer","subtitle","percent","onClose","Icon","name","Progress","success","PersonMap","GenderMap","getGenderText","value","NumberMap","getNumberText","ParsingAnswer","onChange","person","gender","number","disabled","Dropdown","selection","Menu","Item","active","VerbParsingQuestion","onAnswered","question","answer","useState","userAnswer","setUserAnswer","setAnswerStatus","setPerson","setGender","setNumber","p","g","n","shuffle","array","randomIndex","currentIndex","length","Math","floor","random","vocabularyQuizTitle","chapter","QuizCompleteDialog","quizName","shuffledQuestions","questions","QalPerfectQatal","questionNumber","setQuestionNumber","correct","MatchingQuestion","questionSet","selectedQuestion","setSelectedQuestion","selectedAnswer","setSelectedAnswer","completedQuestions","setCompletedQuestions","completedAnswers","setCompletedAnswers","setShuffledQuestions","shuffledAnswers","setShuffledAnswers","isQuestionAnswered","i","includes","isAnswered","useEffect","findIndex","entry","definition","getIndexOfAnswer","concat","console","log","placeholder","Grid","columns","stackable","textAlign","Divider","vertical","Row","verticalAlign","Column","map","vocabEntry","fluid","word","maxPerPage","MatchingQuiz","pageNumber","setPageNumber","pageCount","ceil","currentPage","setCurrentPage","startOffset","endOffset","slice","QuizRegistry","path","render","chapter_2_letters","chapter_4","chapter_4_nouns","chapter_4_conjunction","chapter_5","chapter_7","chapter_8","chapter_8_pronominal","chapter_9","chapter_11","chapter_13","chapter_14","chapter_15","chapter_16","chapter_17","chapter_18","chapter_19","chapter_20","chapter_22","QUIZTYPE_ALL","QUIZTYPE_VOCAB","QUIZTYPE_PARADIGM","isVocab","quiz","endsWith","QuizList","search","setSearch","quizType","setQuizType","filteredQuizzes","quizzes","filter","match","searchLower","toLowerCase","Object","entries","indexOf","searchQuizzes","filterQuizzes","quizRows","index","Table","Cell","to","dividing","Group","Link","Input","icon","e","d","basic","celled","collapsing","HeaderCell","Body","warning","header","content","TabMenuItem","label","activeOnlyWhenExact","useRouteMatch","exact","NavContainer","padding","pointing","createBrowserHistory","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ErrorBoundary","props","state","error","errorInfo","this","setState","whiteSpace","toString","componentStack","React","Component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa556dc4.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Header, Container } from \"semantic-ui-react\";\n\nfunction About({ inverted }) {\n  return (\n    <Container text style={{ marginTop: 32 }}>\n      <p>\n        <Header as='h1'>About</Header>\n        This website was made by Luke Murphey. This is an open-source project and you can get the source-code\n        on <a href=\"https://github.com/LukeMurphey/hebrew_quizzes\">Github</a>. You may be interested in some\n        of my other projects, including <a href=\"https://textcritical.net\">TextCritical.net</a>, a\n        website dedicated to the study of ancient Greek.\n      </p>\n    </Container>\n  );\n}\n\nAbout.propTypes = {\n  inverted: PropTypes.bool,\n};\n\nAbout.defaultProps = {\n  inverted: false,\n};\n\nexport default About;\n","export const URL_HOME = '/';\nexport const URL_QUIZZES = '/quizzes';\nexport const URL_ABOUT = '/about';\n\n// Quizzes\nexport const URL_LETTERS = '/letters';\nexport const URL_PRONOMINAL = '/pronominal';\nexport const URL_QAL_PERFECT = '/qalperfect';\nexport const URL_NOUN_PARSING = '/noun_parsing';\nexport const URL_CONJUNCTION = '/conjunction';\n\n\n// Vocab\nexport const URL_VOCAB_4 = '/vocab_4';\nexport const URL_VOCAB_5 = '/vocab_5';\nexport const URL_VOCAB_7 = '/vocab_7';\nexport const URL_VOCAB_8 = '/vocab_8';\nexport const URL_VOCAB_9 = '/vocab_9';\nexport const URL_VOCAB_11 = '/vocab_11';\nexport const URL_VOCAB_13 = '/vocab_13';\nexport const URL_VOCAB_14 = '/vocab_14';\nexport const URL_VOCAB_15 = '/vocab_15';\nexport const URL_VOCAB_16 = '/vocab_16';\nexport const URL_VOCAB_17 = '/vocab_17';\nexport const URL_VOCAB_18 = '/vocab_18';\nexport const URL_VOCAB_19 = '/vocab_19';\nexport const URL_VOCAB_20 = '/vocab_20';\nexport const URL_VOCAB_22 = '/vocab_22';\n\nexport function urlVocab(chapter){\n    return `/vocab_${chapter}`;\n}\n","export default __webpack_public_path__ + \"static/media/bookCover.f334d199.jpg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Header, Container, Button } from \"semantic-ui-react\";\nimport { withRouter } from \"react-router-dom\";\nimport { URL_QUIZZES } from \"../URLs/index\";\nimport bookCover from'../../files/bookCover.jpg';\n\nfunction Home({ inverted, history }) {\n  return (\n    <Container text style={{ marginTop: 32 }}>\n      <p>\n        <Header as='h1'>Hebrew Quizzes for Learning Biblical Hebrew</Header>\n        <img src={bookCover} style={{width: \"25%\", marginRight: 16, marginBottom: 16, float: \"left\"}} alt=\"bookCover\" />\n        This web-app provides a series of interactive quizzes to help students attempting to learn\n        ancient Hebrew using Kutz and Josberger's book \"Learning Biblical Hebrew.\" You can purchase\n        the book on <a href=\"https://www.amazon.com/Learning-Biblical-Hebrew-Comprehension-Introductory/dp/1683590848\">Amazon.com</a> or <a href=\"https://lexhampress.com/product/147180/learning-biblical-hebrew-reading-for-comprehension-an-introductory-grammar\">Lexham press</a>.\n      </p>\n      <p>\n        <Button primary onClick={() => history.push(URL_QUIZZES)}>Go to the quizzes</Button>\n      </p>\n    </Container>\n  );\n}\n\nHome.propTypes = {\n  inverted: PropTypes.bool,\n  history: PropTypes.object.isRequired,\n};\n\nHome.defaultProps = {\n  inverted: false,\n};\n\nexport default withRouter(Home);\n","export const UNANSWERED = 'unanswered';\nexport const CORRECT = 'correct';\nexport const INCORRECT = 'incorrect';\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Header, Segment, Button, Message } from \"semantic-ui-react\";\nimport { UNANSWERED, CORRECT, INCORRECT } from \"../QuizQuestion/constants\";\n\nfunction QuizQuestion({\n  title,\n  inverted,\n  children,\n  onSubmit,\n  answerStatus,\n  correctAnswer,\n}) {\n  return (\n    <Segment inverted={inverted}>\n      <Header as=\"h2\">{title}</Header>\n      <div>{children}</div>\n      <div style={{ marginTop: 16 }}>\n        {answerStatus === UNANSWERED && onSubmit !== null && (\n          <Button onClick={() => onSubmit()}>Submit</Button>\n        )}\n        {answerStatus === CORRECT && onSubmit !== null && (\n          <>\n            <Message positive>\n              <Message.Header>Yay</Message.Header>\n              <p>The answer is correct.</p>\n            </Message>\n\n            <Button positive onClick={() => onSubmit()}>\n              Next\n            </Button>\n          </>\n        )}\n        {answerStatus === INCORRECT && onSubmit !== null && (\n          <>\n            <Message negative>\n              <Message.Header>Oops</Message.Header>\n              <p>\n                The answer is not correct.\n                {correctAnswer !== null &&\n                  `The correct answer is \"${correctAnswer}\"`}\n              </p>\n            </Message>\n            <Button color=\"red\" onClick={() => onSubmit()}>\n              Try Again\n            </Button>\n          </>\n        )}\n      </div>\n    </Segment>\n  );\n}\n\nQuizQuestion.propTypes = {\n  title: PropTypes.string.isRequired,\n  inverted: PropTypes.bool,\n  answerStatus: PropTypes.oneOf([UNANSWERED, CORRECT, INCORRECT]),\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  onSubmit: PropTypes.func,\n  correctAnswer: PropTypes.string,\n};\n\nQuizQuestion.defaultProps = {\n  inverted: false,\n  answerStatus: null,\n  correctAnswer: null,\n  onSubmit: null,\n};\n\nexport default QuizQuestion;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Header, Container, Progress, Icon } from \"semantic-ui-react\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction QuizContainer({\n  title,\n  subtitle,\n  inverted,\n  percent,\n  onClose,\n  children\n}) {\n  return (\n    <Container style={{ marginTop: 32 }}>\n      <p>\n        <Icon name=\"close\" onClick={() => onClose()} />\n        {percent !== null && (\n          <Progress percent={percent} success />\n        )}\n        <Header as=\"h2\">{title}</Header>\n        <Header as=\"h3\" color=\"grey\">\n          {subtitle}\n        </Header>\n        {children}\n      </p>\n    </Container>\n  );\n}\n\nQuizContainer.propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  inverted: PropTypes.bool,\n  percent: PropTypes.number,\n  onClose: PropTypes.func,\n};\n\nQuizContainer.defaultProps = {\n  inverted: false,\n  percent: null,\n};\n\nexport default withRouter(QuizContainer);\n","\n/**\n * Person\n */\nexport const PERSON_FIRST = '1';\nexport const PERSON_SECOND = '2';\nexport const PERSON_THIRD = '3';\n\nexport const PersonMap = {\n    '1': 'First',\n    '2': 'Second',\n    '3': 'Third',\n}\n\nexport function getPersonText(value) {\n    if (!value) {\n        return \"Person\";\n    }\n    return `${PersonMap[value]} Person`;\n};\n\n/**\n * Gender\n */\nexport const GENDER_MASC = 'm';\nexport const GENDER_FEM = 'f';\nexport const GENDER_COM = 'c';\nexport const GENDER_NEUT = 'n';\n\nexport const GenderMap = {\n    'm': 'Masculine',\n    'f': 'Feminine',\n    'c': 'Common',\n    'n': 'Neuter',\n}\n\nexport function getGenderText(value) {\n    if (!value) {\n        return \"Gender\";\n    }\n    return GenderMap[value];\n};\n\n/**\n * Number\n */\nexport const NUMBER_SINGULAR = 's';\nexport const NUMBER_DUAL = 'd';\nexport const NUMBER_PLURAL = 'p';\n\nexport const NumberMap = {\n    's': 'Singular',\n    'd': 'Dual',\n    'p': 'Plural',\n}\n\nexport function getNumberText(value) {\n    if (!value) {\n        return \"Number\";\n    }\n    return NumberMap[value];\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dropdown } from \"semantic-ui-react\";\nimport {\n  PERSON_FIRST,\n  PERSON_SECOND,\n  PERSON_THIRD,\n  getPersonText,\n  GENDER_MASC,\n  GENDER_FEM,\n  GENDER_COM,\n  GENDER_NEUT,\n  getGenderText,\n  NUMBER_SINGULAR,\n  NUMBER_DUAL,\n  NUMBER_PLURAL,\n  getNumberText,\n} from \"../Hebrew/index\";\n\nfunction ParsingAnswer({ inverted, onChange, person, gender, number, disabled }) {\n\n  return (\n    <>\n      <Dropdown disabled={disabled} selection text={getPersonText(person)} style={{marginRight: 16}} >\n        <Dropdown.Menu>\n          <Dropdown.Item\n            active={person === PERSON_FIRST}\n            text=\"First\"\n            onClick={() => {\n              onChange(PERSON_FIRST, gender, number);\n            }}\n          />\n          <Dropdown.Item\n            active={person === PERSON_SECOND}\n            text=\"Second\"\n            onClick={() => {\n              onChange(PERSON_SECOND, gender, number);\n            }}\n          />\n          <Dropdown.Item\n            active={person === PERSON_THIRD}\n            text=\"Third\"\n            onClick={() => {\n              onChange(PERSON_THIRD, gender, number);\n            }}\n          />\n        </Dropdown.Menu>\n      </Dropdown>\n      <Dropdown disabled={disabled} selection text={getGenderText(gender)} style={{marginRight: 16}}>\n        <Dropdown.Menu>\n          <Dropdown.Item\n            active={gender === GENDER_MASC}\n            text=\"Masculine\"\n            onClick={() => {\n              onChange(person, GENDER_MASC, number);\n            }}\n          />\n          <Dropdown.Item\n            active={gender === GENDER_FEM}\n            text=\"Feminine\"\n            onClick={() => {\n              onChange(person, GENDER_FEM, number);\n            }}\n          />\n          <Dropdown.Item\n            active={gender === GENDER_COM}\n            text=\"Common\"\n            onClick={() => {\n              onChange(person, GENDER_COM, number);\n            }}\n          />\n          <Dropdown.Item\n            active={gender === GENDER_NEUT}\n            text=\"Neuter\"\n            onClick={() => {\n              onChange(person, GENDER_NEUT, number);\n            }}\n          />\n        </Dropdown.Menu>\n      </Dropdown>\n      <Dropdown disabled={disabled} selection text={getNumberText(number)}>\n        <Dropdown.Menu>\n          <Dropdown.Item\n            active={number === NUMBER_SINGULAR}\n            text=\"Singular\"\n            onClick={() => {\n              onChange(person, gender, NUMBER_SINGULAR);\n            }}\n          />\n          <Dropdown.Item\n            active={number === NUMBER_DUAL}\n            text=\"Dual\"\n            onClick={() => {\n              onChange(person, gender, NUMBER_DUAL);\n            }}\n          />\n          <Dropdown.Item\n            active={number === NUMBER_PLURAL}\n            text=\"Plural\"\n            onClick={() => {\n              onChange(person, gender, NUMBER_PLURAL);\n            }}\n          />\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  );\n}\n\nParsingAnswer.propTypes = {\n  inverted: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n  person: PropTypes.oneOf([PERSON_FIRST, PERSON_SECOND, PERSON_THIRD, null]),\n  gender: PropTypes.oneOf([GENDER_MASC, GENDER_FEM, GENDER_COM, GENDER_NEUT, null]),\n  number: PropTypes.oneOf([NUMBER_SINGULAR, NUMBER_PLURAL, NUMBER_DUAL, null]),\n};\n\nParsingAnswer.defaultProps = {\n  inverted: false,\n  disabled: false,\n  person: null,\n  gender: null,\n  number: null,\n};\n\nexport default ParsingAnswer;\n","/**\n * This offers a verb parsing question. This users several other components:\n *    QuizQuestion: offers the question alone with the submit buttons\n *    Verb/ParsingAnswer: offers the dropdowns for selecting the verb parsing\n */\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport QuizQuestion from \"../QuizQuestion\";\nimport { UNANSWERED, CORRECT, INCORRECT } from \"../QuizQuestion/constants\";\nimport QuizContainer from \"../QuizContainer\";\nimport ParsingAnswer from \"../Verb/ParsingAnswer\";\n\n// https://github.com/LukeMurphey/learning_biblical_hebrew_flashcards/blob/master/qal_perfect_qatal.csv\nfunction VerbParsingQuestion({\n  title,\n  subtitle,\n  inverted,\n  percent,\n  onClose,\n  onAnswered,\n  question,\n  answer,\n}) {\n  const [userAnswer, setUserAnswer] = useState(null);\n  const [answerStatus, setAnswerStatus] = useState(UNANSWERED);\n\n  const [person, setPerson] = useState(null);\n  const [gender, setGender] = useState(null);\n  const [number, setNumber] = useState(null);\n\n  return (\n    <QuizContainer\n      title={title}\n      subtitle={subtitle}\n      percent={percent}\n      onClose={onClose}\n  >\n      <QuizQuestion\n        title={question}\n        onSubmit={() => {\n          if(answerStatus === CORRECT ) {\n            // We have confirmed the answer status and now need to move to the next question\n            setAnswerStatus(UNANSWERED);\n\n            // Reset the answer\n            if (userAnswer === answer) {\n              setPerson(null);\n              setGender(null);\n              setNumber(null);\n            }\n\n            // Tell the caller that the question was answered and we should move to the next question\n            onAnswered(userAnswer === answer);\n          }\n          else{\n            setAnswerStatus(userAnswer === answer ? CORRECT : INCORRECT);\n          }\n        }}\n        answerStatus={answerStatus}\n        correctAnswer={answer}\n      >\n        <ParsingAnswer\n          inverted={inverted}\n          question={question}\n          onChange={(p, g, n) => {\n            setPerson(p);\n            setGender(g);\n            setNumber(n);\n\n            if (p && g && n) {\n              setUserAnswer(`${p}${g}${n}`);\n            }\n          }}\n          person={person}\n          gender={gender}\n          number={number}\n          disabled={answerStatus === CORRECT}\n        />\n      </QuizQuestion>\n    </QuizContainer>\n  );\n}\n\nVerbParsingQuestion.propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  question: PropTypes.string,\n  answer: PropTypes.string,\n  inverted: PropTypes.bool,\n  percent: PropTypes.number,\n  onClose: PropTypes.func,\n  onAnswered: PropTypes.func,\n};\n\nVerbParsingQuestion.defaultProps = {\n  inverted: false,\n  percent: null,\n};\n\nexport default withRouter(VerbParsingQuestion);\n","export function shuffle(array) {\n  // https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n  var currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n\n  return array;\n}\n\nexport function vocabularyQuizTitle(chapter) {\n  return `Chapter ${chapter} Vocabulary`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Header, Container, Button} from \"semantic-ui-react\";\nimport { withRouter } from \"react-router-dom\";\nimport { URL_QUIZZES } from \"../URLs/index\";\n\nfunction QuizCompleteDialog({\n  quizName,\n  inverted,\n  history\n}) {\n  return (\n    <Container style={{ marginTop: 32 }}>\n      <p>\n        <Header as=\"h2\">You have successfully completed the quiz for {quizName}</Header>\n        <Button onClick={() => history.push(URL_QUIZZES)}>Return to Quiz List</Button>\n    </p>\n    </Container>\n  );\n}\n\nQuizCompleteDialog.propTypes = {\n  quizName: PropTypes.string,\n  inverted: PropTypes.bool,\n  history: PropTypes.object.isRequired,\n};\n\nQuizCompleteDialog.defaultProps = {\n  inverted: false,\n};\n\nexport default withRouter(QuizCompleteDialog);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport VerbParsingQuestion from \"../../components/Verb/VerbParsingQuestion\";\nimport { URL_QUIZZES } from \"../../components/URLs/index\";\nimport { withRouter } from \"react-router-dom\";\nimport questions from \"./questions.json\";\nimport { shuffle } from \"../../components/Utils/index\";\nimport QuizCompleteDialog from \"../../components/QuizCompleteDialog/index\";\n\n// Shuffle the questions so that users don't see the exact same questions every time\nconst shuffledQuestions= shuffle(questions);\n\nfunction QalPerfectQatal({ subtitle, inverted, history, title }) {\n  const [questionNumber, setQuestionNumber] = useState(0);\n  let question = null;\n  \n  // If the question is within the list, then get it\n  // Otherwise, if it after the end then we have completed the quiz\n  if( questionNumber < shuffledQuestions.length ){\n    question = shuffledQuestions[questionNumber];\n  }\n\n  return (\n    <>\n      { !question && (\n        <QuizCompleteDialog quizName={title} />\n      )\n      }\n      { question && (\n      <VerbParsingQuestion\n        title={title}\n        subtitle={subtitle}\n        question={`Parse this verb: ${question[\"question\"]}`}\n        answer={question[\"answer\"]}\n        percent={100 * (questionNumber / questions.length)}\n        inverted={inverted}\n        onClose={() => history.push(URL_QUIZZES)}\n        onAnswered={(correct) => {\n          if(correct) {\n            setQuestionNumber(1 + questionNumber);\n          }\n        }}\n      />\n      )}\n    </>\n  );\n}\n\nQalPerfectQatal.propTypes = {\n  title: PropTypes.string,\n  inverted: PropTypes.bool,\n  history: PropTypes.object.isRequired,\n};\n\nQalPerfectQatal.defaultProps = {\n  inverted: false,\n  title: \"Qal Perfect (Qatal)\",\n};\n\nexport default withRouter(QalPerfectQatal);\n","/**\n * This component provides a way to provide a matching quiz of words to definitions.\n *\n * Some caveats:\n *    * This doesn't support quizzes where the same question text is in the answers list more than once.\n */\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, Divider, Segment, Button } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport { UNANSWERED, CORRECT } from \"../QuizQuestion/constants\";\nimport QuizContainer from \"../QuizContainer\";\nimport QuizQuestion from \"../QuizQuestion\";\nimport { shuffle } from \"../Utils/index\";\n\n// TODOs:\n// support progress bar\n// fix warnings\n// mark incorrect\n\nfunction MatchingQuestion({\n  inverted,\n  title,\n  questionSet,\n  subtitle,\n  percent,\n  onClose,\n  onAnswered,\n}) {\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n\n  const [answerStatus, setAnswerStatus] = useState(UNANSWERED);\n  const [completedQuestions, setCompletedQuestions] = useState([]);\n  const [completedAnswers, setCompletedAnswers] = useState([]);\n\n  // Shuffle both sets so that we can make sure the left and the right doesn't match\n  const [shuffledQuestions, setShuffledQuestions] = useState([]);\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\n\n  function isQuestionAnswered(i) {\n    return completedQuestions.includes(i);\n  }\n\n  function isAnswered(i) {\n    return completedAnswers.includes(i);\n  }\n\n  function getIndexOfAnswer(i) {\n    // Get the question for the index\n    const question = shuffledQuestions[i];\n\n    return shuffledAnswers.findIndex(\n      (entry) => entry.definition === question.definition\n    );\n  }\n\n  // Handle selection of answers\n  useEffect(() => {\n    // Evaluate the result if both an answer and question have been selected\n    if (selectedQuestion !== null && selectedAnswer !== null) {\n      // Determine what the correct answer is\n      const correctAnswerIndex = getIndexOfAnswer(selectedQuestion);\n\n      // If correct, then update the UI accordingly\n      if (correctAnswerIndex === selectedAnswer) {\n        // Add to the correct list\n        setCompletedQuestions(completedQuestions.concat([selectedQuestion]));\n        setCompletedAnswers(completedAnswers.concat([selectedAnswer]));\n\n        // Unselect the existing entries\n        setSelectedQuestion(null);\n        setSelectedAnswer(null);\n      }\n    }\n  }, [selectedQuestion, selectedAnswer]);\n\n  // Prepare the questions and answers\n  useEffect(() => {\n    \n    if (questionSet !== null) {\n      // Shuffle the questions and the answers so they don't match in an obvious way\n      setShuffledQuestions(shuffle([...questionSet]));\n      setShuffledAnswers(shuffle([...questionSet]));\n\n      setCompletedQuestions([]);\n      setCompletedAnswers([]);\n    }\n  }, [questionSet]);\n\n  // Handle the case where the user is done matching everything\n  useEffect(() => {\n    // If there are no more entries, then signal that we are done\n    if(completedAnswers !== null && questionSet !== null && completedAnswers.length >= questionSet.length){\n      // Send up the note that the question has been answered\n      onAnswered(CORRECT);\n    }\n  }, [completedAnswers]);\n\n  console.log(\"rendering MatchingQuestion\", questionSet)\n\n  return (\n    <QuizContainer\n      title={title}\n      subtitle={subtitle}\n      percent={percent}\n      onClose={onClose}\n    >\n      <QuizQuestion\n        answerStatus={answerStatus}\n        // correctAnswer={answer}\n      >\n        <Segment placeholder>\n          <Grid columns={2} stackable textAlign=\"center\">\n            <Divider vertical>Match These</Divider>\n\n            <Grid.Row verticalAlign=\"middle\">\n              <Grid.Column>\n                {shuffledQuestions.map((vocabEntry, i) => (\n                  <Button\n                    key={i}\n                    style={{ marginTop: 12 }}\n                    disabled={isQuestionAnswered(i)}\n                    primary={selectedQuestion === i}\n                    onClick={() => setSelectedQuestion(i)}\n                    fluid\n                  >\n                    {vocabEntry.word}\n                  </Button>\n                ))}\n              </Grid.Column>\n              <Grid.Column>\n                {shuffledAnswers.map((vocabEntry, i) => (\n                  <Button\n                    key={i}\n                    style={{ marginTop: 12 }}\n                    disabled={isAnswered(i)}\n                    primary={selectedAnswer === i}\n                    onClick={() => setSelectedAnswer(i)}\n                    fluid\n                  >\n                    {vocabEntry.definition}\n                  </Button>\n                ))}\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      </QuizQuestion>\n    </QuizContainer>\n  );\n}\n\nMatchingQuestion.propTypes = {\n  inverted: PropTypes.bool,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  maxPerPage: PropTypes.number,\n  questionSet: PropTypes.arrayOf(PropTypes.node).isRequired,\n  percent: PropTypes.number,\n  onClose: PropTypes.func,\n  onAnswered: PropTypes.func,\n};\n\nMatchingQuestion.defaultProps = {\n  inverted: true,\n  maxPerPage: 5,\n};\n\nexport default MatchingQuestion;\n","/**\n * This component provides a way to provide a matching quiz of words to definitions.\n *\n * Some caveats:\n *    * This doesn't support quizzes where the same question text is in the answers list more than once.\n */\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { URL_QUIZZES } from \"../../components/URLs/index\";\nimport QuizCompleteDialog from \"../../components/QuizCompleteDialog/index\";\nimport MatchingQuestion from \"../../components/MatchingQuestion\";\n\nfunction MatchingQuiz({ inverted, title, maxPerPage, questionSet, history }) {\n  const [pageNumber, setPageNumber] = useState(0);\n\n  // Chop up the vocab list\n  const pageCount = Math.ceil((1.0 * questionSet.length) / maxPerPage);\n  const [currentPage, setCurrentPage] = useState(null);\n\n  // Chop up the question set when the page number changes\n  useEffect(() => {\n    const startOffset = pageNumber * maxPerPage;\n    const endOffset = (pageNumber + 1) * maxPerPage;\n\n    setCurrentPage(questionSet.slice(startOffset, endOffset));\n  }, [pageNumber, questionSet, maxPerPage]);\n\n  return (\n    <>\n      {pageNumber < pageCount && (\n        <MatchingQuestion\n          inverted={inverted}\n          title={title}\n          percent={100 * (pageNumber / pageCount)}\n          onClose={() => history.push(URL_QUIZZES)}\n          onAnswered={() => {\n            setPageNumber(pageNumber + 1);\n          }}\n          questionSet={currentPage}\n          maxPerPage={maxPerPage}\n        />\n      )}\n      {pageNumber >= pageCount && <QuizCompleteDialog quizName={title} />}\n    </>\n  );\n}\n\nMatchingQuiz.propTypes = {\n  inverted: PropTypes.bool,\n  title: PropTypes.string,\n  maxPerPage: PropTypes.number,\n  questionSet: PropTypes.arrayOf(PropTypes.node).isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nMatchingQuiz.defaultProps = {\n  inverted: true,\n  title: \"Vocabulary quiz\",\n  maxPerPage: 5,\n};\n\nexport default withRouter(MatchingQuiz);\n","import {\n  URL_LETTERS,\n  URL_QAL_PERFECT,\n  URL_VOCAB_4,\n  URL_NOUN_PARSING,\n  URL_CONJUNCTION,\n  URL_VOCAB_5,\n  URL_VOCAB_7,\n  URL_VOCAB_8,\n  URL_VOCAB_9,\n  URL_VOCAB_11,\n  URL_VOCAB_13,\n  URL_VOCAB_14,\n  URL_VOCAB_15,\n  URL_VOCAB_16,\n  URL_VOCAB_17,\n  URL_VOCAB_18,\n  URL_VOCAB_19,\n  URL_VOCAB_20,\n  URL_VOCAB_22,\n  URL_PRONOMINAL,\n} from \"../URLs/index\";\nimport QalPerfect from \"../../quizzes/QalPerfectQatal/index\";\nimport MatchingQuiz from \"../../quizzes/MatchingQuiz/index\";\nimport chapter_2_letters from \"../../quizzes/MatchingQuiz/data/chapter_2_letters.json\";\nimport chapter_4 from \"../../quizzes/MatchingQuiz/data/chapter_4.json\";\nimport chapter_4_nouns from \"../../quizzes/MatchingQuiz/data/chapter_4_nouns.json\";\nimport chapter_4_conjunction from \"../../quizzes/MatchingQuiz/data/chapter_4_conjunction.json\";\nimport chapter_5 from \"../../quizzes/MatchingQuiz/data/chapter_5.json\";\nimport chapter_7 from \"../../quizzes/MatchingQuiz/data/chapter_7.json\";\nimport chapter_8 from \"../../quizzes/MatchingQuiz/data/chapter_8.json\";\nimport chapter_8_pronominal from \"../../quizzes/MatchingQuiz/data/chapter_8_pronominal.json\";\nimport chapter_9 from \"../../quizzes/MatchingQuiz/data/chapter_9.json\";\nimport chapter_11 from \"../../quizzes/MatchingQuiz/data/chapter_11.json\";\nimport chapter_13 from \"../../quizzes/MatchingQuiz/data/chapter_13.json\";\nimport chapter_14 from \"../../quizzes/MatchingQuiz/data/chapter_14.json\";\nimport chapter_15 from \"../../quizzes/MatchingQuiz/data/chapter_15.json\";\nimport chapter_16 from \"../../quizzes/MatchingQuiz/data/chapter_16.json\";\nimport chapter_17 from \"../../quizzes/MatchingQuiz/data/chapter_17.json\";\nimport chapter_18 from \"../../quizzes/MatchingQuiz/data/chapter_18.json\";\nimport chapter_19 from \"../../quizzes/MatchingQuiz/data/chapter_19.json\";\nimport chapter_20 from \"../../quizzes/MatchingQuiz/data/chapter_20.json\";\nimport chapter_22 from \"../../quizzes/MatchingQuiz/data/chapter_22.json\";\n\nimport { shuffle, vocabularyQuizTitle } from \"../Utils/index\";\n\nexport default function QuizRegistry({ inverted }) {\n  return [\n    {\n      title: \"Letters\",\n      chapter: 2,\n      path: URL_LETTERS,\n      render: (\n        <MatchingQuiz\n          inverted={inverted}\n          title={\"Letters\"}\n          questionSet={shuffle(chapter_2_letters)}\n          maxPerPage={15}\n        />\n      ),\n    },\n    {\n      title: \"Chapter 4 Vocabulary\",\n      chapter: 4,\n      path: URL_VOCAB_4,\n      render: (\n        <MatchingQuiz\n          inverted={inverted}\n          title={vocabularyQuizTitle(4)}\n          questionSet={shuffle(chapter_4)}\n        />\n      ),\n    },\n    {\n      title: \"Noun Parsing\",\n      chapter: 4,\n      path: URL_NOUN_PARSING,\n      render: (\n        <MatchingQuiz\n          inverted={inverted}\n          title={\"Noun Parsing\"}\n          subtitle={\"Match the noun with the correct form\"}\n          questionSet={shuffle(chapter_4_nouns)}\n          maxPerPage={10}\n        />\n      ),\n    },\n    {\n      title: \"Conjunction\",\n      chapter: 4,\n      path: URL_CONJUNCTION,\n      render: (\n        <MatchingQuiz\n          inverted={inverted}\n          title={\"Conjunction\"}\n          subtitle={\"Match the conjunction with the word\"}\n          questionSet={shuffle(chapter_4_conjunction)}\n          maxPerPage={10}\n        />\n      ),\n    },\n    {\n      title: \"Chapter 5 Vocabulary\",\n      chapter: 5,\n      path: URL_VOCAB_5,\n      render: (\n        <MatchingQuiz\n          inverted={inverted}\n          title={vocabularyQuizTitle(5)}\n          questionSet={shuffle(chapter_5)}\n        />\n      ),\n    },\n    {\n      title: \"Chapter 7 Vocabulary\",\n      chapter: 7,\n      path: URL_VOCAB_7,\n      render: (\n        <MatchingQuiz\n          inverted={inverted}\n          title={vocabularyQuizTitle(7)}\n          questionSet={shuffle(chapter_7)}\n        />\n      ),\n    },\n    {\n      title: \"Chapter 8 Vocabulary\",\n      chapter: 8,\n      path: URL_VOCAB_8,\n      render: (\n        <MatchingQuiz\n          inverted={inverted}\n          title={vocabularyQuizTitle(8)}\n          questionSet={shuffle(chapter_8)}\n        />\n      ),\n    },\n    {\n      title: \"Pronominal\",\n      chapter: 8,\n      path: URL_PRONOMINAL,\n      render: (\n        <MatchingQuiz\n          inverted={inverted}\n          title={\"Pronominal\"}\n          questionSet={shuffle(chapter_8_pronominal)}\n        />\n      ),\n    },\n    {\n      title: \"Chapter 9 Vocabulary\",\n      chapter: 9,\n      path: URL_VOCAB_9,\n      render: (\n        <MatchingQuiz\n          inverted={inverted}\n          title={vocabularyQuizTitle(9)}\n          questionSet={shuffle(chapter_9)}\n        />\n      ),\n    },\n    {\n      title: \"Chapter 11 Vocabulary\",\n      chapter: 11,\n      path: URL_VOCAB_11,\n      render: (\n        <MatchingQuiz\n          inverted={inverted}\n          title={vocabularyQuizTitle(11)}\n          questionSet={shuffle(chapter_11)}\n        />\n      ),\n    },\n    {\n      title: \"Qal Perfects (Qatal)\",\n      chapter: 12,\n      path: URL_QAL_PERFECT,\n      render: <QalPerfect inverted={inverted} />,\n    },\n    {\n      title: \"Chapter 13 Vocabulary\",\n      chapter: 13,\n      path: URL_VOCAB_13,\n      render: (\n        <MatchingQuiz\n          inverted={inverted}\n          title={vocabularyQuizTitle(13)}\n          questionSet={shuffle(chapter_13)}\n        />\n      ),\n    },\n    {\n      title: \"Chapter 14 Vocabulary\",\n      chapter: 14,\n      path: URL_VOCAB_14,\n      render: (\n        <MatchingQuiz\n          inverted={inverted}\n          title={vocabularyQuizTitle(14)}\n          questionSet={shuffle(chapter_14)}\n        />\n      ),\n    },\n    {\n      title: \"Chapter 15 Vocabulary\",\n      chapter: 15,\n      path: URL_VOCAB_15,\n      render: (\n        <MatchingQuiz\n          inverted={inverted}\n          title={vocabularyQuizTitle(15)}\n          questionSet={shuffle(chapter_15)}\n        />\n      ),\n    },\n    {\n      title: \"Chapter 16 Vocabulary\",\n      chapter: 16,\n      path: URL_VOCAB_16,\n      render: (\n        <MatchingQuiz\n          inverted={inverted}\n          title={vocabularyQuizTitle(16)}\n          questionSet={shuffle(chapter_16)}\n        />\n      ),\n    },\n    {\n      title: \"Chapter 17 Vocabulary\",\n      chapter: 17,\n      path: URL_VOCAB_17,\n      render: (\n        <MatchingQuiz\n          inverted={inverted}\n          title={vocabularyQuizTitle(17)}\n          questionSet={shuffle(chapter_17)}\n        />\n      ),\n    },\n    {\n      title: \"Chapter 18 Vocabulary\",\n      chapter: 18,\n      path: URL_VOCAB_18,\n      render: (\n        <MatchingQuiz\n          inverted={inverted}\n          title={vocabularyQuizTitle(18)}\n          questionSet={shuffle(chapter_18)}\n        />\n      ),\n    },\n    {\n      title: \"Chapter 19 Vocabulary\",\n      chapter: 19,\n      path: URL_VOCAB_19,\n      render: (\n        <MatchingQuiz\n          inverted={inverted}\n          title={vocabularyQuizTitle(19)}\n          questionSet={shuffle(chapter_19)}\n        />\n      ),\n    },\n    {\n      title: \"Chapter 20 Vocabulary\",\n      chapter: 20,\n      path: URL_VOCAB_20,\n      render: (\n        <MatchingQuiz\n          inverted={inverted}\n          title={vocabularyQuizTitle(20)}\n          questionSet={shuffle(chapter_20)}\n        />\n      ),\n    },\n    {\n      title: \"Chapter 22 Vocabulary\",\n      chapter: 22,\n      path: URL_VOCAB_22,\n      render: (\n        <MatchingQuiz\n          inverted={inverted}\n          title={vocabularyQuizTitle(22)}\n          questionSet={shuffle(chapter_22)}\n        />\n      ),\n    },\n  ];\n}\n","import React, { useState } from \"react\";\nimport { Table, Header } from 'semantic-ui-react';\nimport { Container, Icon, Button, Input, Message } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\nimport QuizRegistry from \"../QuizRegistry\";\nimport PropTypes from 'prop-types';\n\nconst QUIZTYPE_ALL = null;\nconst QUIZTYPE_VOCAB = \"vocab\";\nconst QUIZTYPE_PARADIGM = \"paradigm\";\n\nexport function isVocab(quiz) {\n  return quiz.title.endsWith(\"Vocabulary\");\n}\n\nexport function filterQuizzes(quizzes, quizType) {\n  return quizzes.filter((quiz) => {\n    if (!quizType) {\n      return true;\n    } else if (quizType === QUIZTYPE_VOCAB) {\n      return isVocab(quiz);\n    } else if (quizType === QUIZTYPE_PARADIGM) {\n      return !isVocab(quiz);\n    }\n\n    return true;\n  });\n}\n\nexport function searchQuizzes(quizzes, search) {\n  return quizzes.filter((quiz) => {\n    if (!search) {\n      return true;\n    } else {\n      let match = false;\n      let searchLower = search.toLowerCase();\n\n      Object.entries(quiz).map(([, value]) => {\n        if (value.indexOf) {\n          match = match || value.toLowerCase().indexOf(searchLower) >= 0;\n        }\n      });\n      return match;\n    }\n  });\n}\n\nfunction QuizList( { inverted }) {\n  const [search, setSearch] = useState(null);\n  const [quizType, setQuizType] = useState(QUIZTYPE_ALL);\n\n  const filteredQuizzes = QuizRegistry({ inverted })\n    ? searchQuizzes(filterQuizzes(QuizRegistry({ inverted }), quizType), search)\n    : null;\n\n  const quizRows = [];\n  for (const [index, value] of filteredQuizzes.entries()) {\n    quizRows.push(\n      <Table.Row key={index}>\n        <Table.Cell>{value.chapter}</Table.Cell>\n        <Table.Cell>{value.title}</Table.Cell>\n        <Table.Cell><Link to={value.path}>Start</Link></Table.Cell>\n      </Table.Row>\n    );\n  }\n\n  return (\n    <Container text>\n      <Header as=\"h1\" dividing>\n        Quizzes\n      </Header>\n\n      <Button.Group>\n        <Button\n          as={Link}\n          onClick={() => setQuizType(QUIZTYPE_ALL)}\n          active={quizType === QUIZTYPE_ALL}\n        >\n          All\n        </Button>\n        <Button\n          as={Link}\n          onClick={() => setQuizType(QUIZTYPE_VOCAB)}\n          active={quizType === QUIZTYPE_VOCAB}\n        >\n          Vocabulary\n        </Button>\n        <Button\n          as={Link}\n          onClick={() => setQuizType(QUIZTYPE_PARADIGM)}\n          active={quizType === QUIZTYPE_PARADIGM}\n        >\n          Other\n        </Button>\n      </Button.Group>\n\n      <Input\n        style={{ float: \"right\" }}\n        icon\n        placeholder=\"Search...\"\n        onChange={(e, d) => setSearch(d.value)}\n      >\n        <input />\n        <Icon name=\"search\" />\n      </Input>\n\n      {quizRows.length >= 0 && (\n        <Table basic=\"very\" celled collapsing>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Chapter</Table.HeaderCell>\n                    <Table.HeaderCell>Title</Table.HeaderCell>\n                    <Table.HeaderCell>Description</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {quizRows}\n            </Table.Body>\n        </Table>\n      )}\n      {quizRows.length === 0 && (\n        <Message\n          warning\n          header='No Matches'\n          content='No quizzes match your search.'\n          />\n      )}\n    </Container>\n  );\n}\n\nQuizList.propTypes = {\n  inverted: PropTypes.bool,\n};\n\nQuizList.defaultProps = {\n  inverted: true,\n};\n\nexport default QuizList;\n","import {\n  useRouteMatch,\n  Link,\n} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Container, Menu } from \"semantic-ui-react\";\n\n/**\n * This class offers a menu entry for a tab that works with the React router to show the tab when clicked.\n */\nfunction TabMenuItem({ label, to, activeOnlyWhenExact }) {\n  let match = useRouteMatch({\n    path: to,\n    exact: activeOnlyWhenExact,\n  });\n\n  return (\n    <Menu.Item name={label} active={match}>\n      <Link to={to}>{label}</Link>\n    </Menu.Item>\n  );\n}\n\nfunction NavContainer({ inverted, children }) {\n  return (\n      <>\n      <Container\n        fluid\n        style={{\n          padding: \"8px\",\n          marginBottom: 16,\n        }}\n      >\n        <Container text>\n          <Menu pointing inverted={inverted}>\n            <TabMenuItem\n              to=\"/\"\n              label=\"Get the Book\"\n              activeOnlyWhenExact={true}\n            />\n            <TabMenuItem to=\"/quizzes\" label=\"Quizzes\" />\n            <TabMenuItem to=\"/about\" label=\"About\" />\n          </Menu>\n        </Container>\n      </Container>\n      {children}\n      </>\n  );\n}\n\nNavContainer.propTypes = {\n  inverted: PropTypes.bool,\n};\n\nNavContainer.defaultProps = {\n  inverted: true,\n};\n\nexport default NavContainer;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport {\n  HashRouter as Router,\n  Route,\n} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport About from \"./components/About/index\";\nimport Home from \"./components/Home/index\";\nimport QuizList from \"./components/QuizList/index\";\nimport NavContainer from \"./components/NavContainer/index\";\nimport { URL_QUIZZES, URL_ABOUT, URL_HOME } from \"./components/URLs/index\";\nimport history from \"./history\";\nimport QuizRegistry from \"./components/QuizRegistry\";\n\nfunction App({ inverted }) {\n  return (\n    <Router history={history}>\n      <Route exact path={URL_QUIZZES}>\n        <NavContainer>\n          <QuizList inverted={inverted} />\n        </NavContainer>\n      </Route>\n      <Route exact path={URL_ABOUT}>\n        <NavContainer>\n          <About />\n        </NavContainer>\n      </Route>\n      <Route exact path={URL_HOME}>\n        <NavContainer>\n          <Home />\n        </NavContainer>\n      </Route>\n      {QuizRegistry({ inverted }).map((quiz, i) => (\n        <Route exact path={quiz.path}>\n          {quiz.render}\n        </Route>\n      ))}\n    </Router>\n  );\n}\n\nApp.propTypes = {\n  inverted: PropTypes.bool,\n};\n\nApp.defaultProps = {\n  inverted: true,\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { Header, Segment, Container } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  render() {\n    const { errorInfo, error } = this.state;\n    const { children, inverted } = this.props;\n\n    if (errorInfo) {\n      // Display the stack trace\n      return (\n        <Container style={{ marginTop: 32 }}>\n          <Segment inverted={inverted} color=\"red\">\n            <Header as=\"h1\">Something went wrong.</Header>\n            An error happened and the view could not be rendered.\n            <details style={{ whiteSpace: 'pre-wrap', marginTop: 24 }}>\n              {error && error.toString()}\n              <br />\n              {errorInfo.componentStack}\n            </details>\n          </Segment>\n        </Container>\n      );\n    }\n    // Normally, just render children\n    return children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  children: PropTypes.element.isRequired,\n  inverted: PropTypes.bool,\n};\n\nErrorBoundary.defaultProps = {\n  inverted: false,\n};\n\nexport default ErrorBoundary;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ErrorBoundary from './components/ErrorBoundary/index';\n\nReactDOM.render(\n  <ErrorBoundary>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ErrorBoundary>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}